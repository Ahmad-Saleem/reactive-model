"use strict";function ReactiveModel(){function e(e,t){if(c)throw new Error("model.addPublicProperty() is being invoked after model.finalize, but this is not allowed. Public properties may only be added before the model is finalized.");return r[e]=t,a[e]=t,i}function t(){if(c)throw new Error("model.finalize() is being invoked more than once, but this function should only be invoked once.");return c=!0,Object.keys(r).forEach(function(e){i[e]=function(t){return arguments.length?(a[e]=t,i):a[e]}}),i}function n(){var e={};return Object.keys(r).forEach(function(t){e[t]=a[t]}),e}function o(e){return Object.keys(r).forEach(function(e){var t=r[e];i[e](t)}),Object.keys(e).forEach(function(t){var n=e[t];i[t](n)}),i}if(!(this instanceof ReactiveModel))return new ReactiveModel;var i=this,r={},c=!1,a={};i.addPublicProperty=e,i.finalize=t,i.getState=n,i.setState=o}function Graph(){function e(e){return i[e]||(i[e]=[])}function t(t,n){e(t).push(n)}function n(t,n){i[t]&&(i[t]=i[t]),e(t).push(n)}function o(t,n){var o={},i=[];return n||(n=function(){return!0}),t.forEach(function r(t){!o[t]&&n(t)&&(o[t]=!0,e(t).forEach(r),i.push(t))}),i}var i={};return{adjacent:e,addEdge:t,removeEdge:n,DFS:o}}function ReactiveGraph(){function e(){return i++}function t(t,n){function o(t){var o=e();return r[o]=n[t],o}t.inNodes=t.inProperties.map(o),t.node=e(),t.outNode=o(t.outProperty)}function n(e){if(void 0===e.inNodes||void 0===e.outNode)throw new Error("Attempting to add a reactive function that doesn't have inNodes or outNode defined first.")}var o=new Graph,i=0,r={};return o.addReactiveFunction=n,o.assignNodes=t,o.makeNode=e,o}function ReactiveFunction(e,t,n){return{inProperties:e,outProperty:t,callback:n,inNodes:void 0,outNode:void 0}}ReactiveFunction.parse=function(e){return Object.keys(e).map(function(t){var n=e[t],o=n.splice(n.length-1)[0],i=n;return ReactiveFunction(i,t,o)})},ReactiveModel.Graph=Graph,ReactiveModel.ReactiveGraph=ReactiveGraph,ReactiveModel.ReactiveFunction=ReactiveFunction;var reactiveModel=ReactiveModel;module.exports=reactiveModel;